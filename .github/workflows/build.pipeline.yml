name: CI

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]

jobs:

  # prepare the build environment by building a docker container
  prepare_environment:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Setup Docker buildx
      uses: docker/setup-buildx-action@v6
    - name: Login to GHCR
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.PAT_GITHUB }}
    - name: Build and publish Docker image
      uses: docker/build-push-action@v3
      with:
        context: .
        file: ./.devcontainer/Dockerfile
        push: true
        tags: ghcr.io/${{ github.repository }}/build-env
        build-args: |
          BASE_IMAGE=ghcr.io/veil-org/devcontainers/python-3.10-buster-devcontainer-toolchain
          TAG=0.1.8
        cache-from: type=registry,ref=user/app:latest
        cache-to: type=inline,mode=min

  # performs code quality checks (if not specified otherwise with [skip ci])
  code_quality:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/${{ github.repository }}/build-env:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.PAT_GITHUB }}
    needs: prepare_environment
    strategy:
      fail-fast: false
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Install code quality deps
      run: |
        poe install_all_dependencies
    - name: Test with pytest
      run: |
        poe test
    - name: Quality gate
      run: |
        :
  
  # attempts triggering a release according to semantic-release
  trigger_release:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/${{ github.repository }}/build-env:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.PAT_GITHUB }}
    if: github.ref == 'refs/heads/main'
    needs: 
      - prepare_environment
      - code_quality
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.PAT_GITHUB }}
    - name: Install release deps
      run: |
        poe install_release_dependencies
    - name: Trigger distribution
      # a PAT is needed instead of GITHUB_TOKEN since otherwise subsequent commit do not trigger any action.
      env:
        GH_TOKEN: ${{ secrets.PAT_GITHUB }}
      run: |
        poe release